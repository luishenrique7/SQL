CREATE TABLE funcionarios
(
    cod_funcionario    INT NOT NULL,
    nome_funcionario   VARCHAR2(255) NOT NULL,
    cpf                VARCHAR2(15) NOT NULL,
    data_nascimento    DATE NOT NULL,
    estado_civil       VARCHAR2(20) NULL,
    PRIMARY KEY(cod_funcionario)
);

CREATE TABLE departamentos
(
    cod_departamento    INT NOT NULL,
    nome_departamento   VARCHAR2(50) NOT NULL,
    PRIMARY KEY(cod_departamento)
);

CREATE TABLE valor_hora
(
    cod_hora           INT NOT NULL,
    valor_hora         DECIMAL(16,2) NOT NULL,
    cod_funcionario    INT NOT NULL,
    cod_departamento   INT NOT NULL,
    PRIMARY KEY(cod_hora),
    CONSTRAINT fk_cod_func FOREIGN KEY(cod_departamento) REFERENCES departamentos(cod_departamento)
);

CREATE SEQUENCE SEQ_FUNCIONARIOS
  INCREMENT BY 1 --DE QUANTO EM QUANTO   INCREMENTADO
  START WITH 1   --VALOR INICIAL
  MAXVALUE 9999  --VALOR MAXIMO
  CYCLE;

CREATE SEQUENCE SEQ_VALOR_HORA
  INCREMENT BY 1 --DE QUANTO EM QUANTO   INCREMENTADO
  START WITH 1   --VALOR INICIAL
  MAXVALUE 9999  --VALOR MAXIMO
  CYCLE;
  
CREATE SEQUENCE SEQ_DEPARTAMENTOS
  INCREMENT BY 1 --DE QUANTO EM QUANTO   INCREMENTADO
  START WITH 1   --VALOR INICIAL
  MAXVALUE 9999  --VALOR MAXIMO
  CYCLE;

INSERT INTO FUNCIONARIOS VALUES(SEQ_FUNCIONARIOS.NEXTVAL, 'IARA CRISTINA FERREIRA', '364.928.893-90', '10/11/95', 'SOLTEIRO');

INSERT INTO DEPARTAMENTOS VALUES(SEQ_DEPARTAMENTOS.NEXTVAL, 'COMPRAS');

INSERT INTO VALOR_HORA VALUES(SEQ_VALOR_HORA.NEXTVAL, 7.32, 3, 4);


SELECT * FROM VALOR_HORA;

SELECT  FUN.COD_FUNCIONARIO
       ,FUN.NOME_FUNCIONARIO
       ,DEP.COD_DEPARTAMENTO
       ,DEP.NOME_DEPARTAMENTO
       ,VAL.VALOR_HORA
FROM VALOR_HORA VAL, FUNCIONARIOS FUN, DEPARTAMENTOS DEP
WHERE VAL.COD_FUNCIONARIO = FUN.COD_FUNCIONARIO
AND VAL.COD_DEPARTAMENTO = DEP.COD_DEPARTAMENTO;

DECLARE
    V_HORA VALOR_HORA.COD_HORA%TYPE :=  3;
BEGIN
    UPDATE VALOR_HORA
    SET    COD_DEPARTAMENTO = 2
    WHERE COD_HORA = V_HORA;
END;


DECLARE
    V_COD_FUNCIONARIO     FUNCIONARIOS.COD_FUNCIONARIO%TYPE;
    V_NOME_FUNCIONARIO    FUNCIONARIOS.NOME_FUNCIONARIO%TYPE;
    V_NOME_DEPARTAMENTO   DEPARTAMENTOS.NOME_DEPARTAMENTO%TYPE;
    V_VALOR_HORA          VALOR_HORA.VALOR_HORA%TYPE;
    --V_SALARIO             V_VALOR_HORA%TYPE := V_VALOR_HORA * 1000;
BEGIN
    SELECT  FUN.COD_FUNCIONARIO
           ,FUN.NOME_FUNCIONARIO
           ,DEP.NOME_DEPARTAMENTO
           ,VAL.VALOR_HORA * 8 * 20
    INTO    V_COD_FUNCIONARIO
           ,V_NOME_FUNCIONARIO
           ,V_NOME_DEPARTAMENTO
           ,V_VALOR_HORA
    FROM VALOR_HORA VAL, FUNCIONARIOS FUN, DEPARTAMENTOS DEP
    WHERE VAL.COD_FUNCIONARIO = FUN.COD_FUNCIONARIO
    AND VAL.COD_DEPARTAMENTO = DEP.COD_DEPARTAMENTO
    AND FUN.COD_FUNCIONARIO = 1;
    
    DBMS_OUTPUT.PUT_LINE('FUNCIONARIO:  ' || TO_CHAR(V_NOME_FUNCIONARIO));
    DBMS_OUTPUT.PUT_LINE('DEPARTAMENTO: ' || TO_CHAR(V_NOME_DEPARTAMENTO));
    DBMS_OUTPUT.PUT_LINE('SALARIO:      ' || TO_CHAR(V_VALOR_HORA));
END;

CREATE OR REPLACE PROCEDURE PROC_ATUAL_EMP(P_EMPRESTADO LIVRO.EMPRESTADO%TYPE)
AS
BEGIN
    IF (P_EMPRESTADO = 'D') THEN
        UPDATE LIVRO SET
          EMPRESTADO = 'E'
        WHERE EMPRESTADO = P_EMPRESTADO;
    ELSIF (P_EMPRESTADO = 'E') THEN
        UPDATE LIVRO SET
          EMPRESTADO ='D'
        WHERE EMPRESTADO = P_EMPRESTADO;
    END IF;
END PROC_ATUAL_EMP;

BEGIN
    PROC_ATUAL_EMP('D');
END;

set serveroutput on;

